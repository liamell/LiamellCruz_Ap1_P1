@page "/Prestamos/Delete/{PrestamoId:int}"
@using LiamellCruz_Ap1_P1.Models
@using LiamellCruz_Ap1_P1.Service
@inject PrestamoService prestamoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle> Eliminar Prestamo</PageTitle>
<div class="container">
	<div class="shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar Prestamo</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>Desea eliminar este Prestamo?</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>PrestamoId</strong>@Prestamos.PrestamoId</li>
				<li><strong>Deudor:</strong>@Prestamos.Deudor</li>
				<li><strong>Concepto:</strong>@Prestamos.Concepto</li>
				<li><strong>Monto:</strong>@Prestamos.Monto</li>

			</ul>
		</div>
		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>



@code {
	[Parameter]

	public int PrestamoId { get; set; }
	public Prestamos Prestamos { get; set; } = new Prestamos();
	public string Mensaje { get; set; } = string.Empty;


	protected override async Task OnInitializedAsync()
	{
		Prestamos = await prestamoService.Buscar(PrestamoId);
	}

	private async Task Eliminar()
	{
		var eliminado = await prestamoService.Eliminar(PrestamoId);

		if (eliminado)
			Mensaje = "El prestamo ha sido eliminado correctamente";
		else

			Mensaje = "No se ha podido eliminar el Prestamo";

	}

	public void Volver()
	{
		navigationManager.NavigateTo("/Prestamos/Index");
	}


}
