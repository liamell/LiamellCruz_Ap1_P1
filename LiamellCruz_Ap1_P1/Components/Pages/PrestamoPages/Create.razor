@page "/Prestamos/Create"
@using LiamellCruz_Ap1_P1.Models
@using LiamellCruz_Ap1_P1.Service
@inject DeudorService deudorService
@inject PrestamoService prestamoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle>Create</PageTitle>
<EditForm Model="Prestamos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    @* Formulario *@
    <div class="container">
        <div class="shadow-lg">
            @* Header *@
            <div class="card-header text-center">
                <h3><strong>Crear Prestamo</strong></h3>
            </div>

            @* Body *@
            <div class="card-body">
                <div class="row">
                    @* Id *@
                    <div class="col-1">
                        <label class="form-label"><strong>PrestamoId</strong></label>
                        <InputNumber class="form-control" @bind-Value="Prestamos.PrestamoId" readonly></InputNumber>
                    </div>

                    @* Deudor (Seleccionar desde lista) *@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>Deudor</strong></label>
                        <InputSelect class="form-control" @bind-Value="Prestamos.DeudorId">
                            <option value="">Seleccione un deudor</option>
                            @foreach (var deudor in ListaDeudores)
                            {
                                <option value="@deudor.DeudorId">@deudor.Nombres</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="(() => Prestamos.DeudorId)" />
                    </div>

                    @* Concepto *@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>Concepto</strong></label>
                        <InputText class="form-control" @bind-Value="Prestamos.Concepto"></InputText>
                        <ValidationMessage For="(() => Prestamos.Concepto)" />
                    </div>

                    @* Monto *@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>Monto</strong></label>
                        <InputNumber class="form-control" @bind-Value="Prestamos.Monto"></InputNumber>
                        <ValidationMessage For="(() => Prestamos.Monto)" />
                    </div>
                </div>
            </div>

            @* Footer *@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Prestamos Prestamos { get; set; } = new Prestamos();
    public List<Deudor> ListaDeudores { get; set; } = new List<Deudor>();

    protected override async Task OnInitializedAsync()
    {
        ListaDeudores = await deudorService.Listar(d => d.DeudorId > 0); 
    }

    private async Task Guardar()
    {
        var creado = await prestamoService.Guardar(Prestamos);

        if (creado)
        {
            navigationManager.NavigateTo("/Prestamos/Index");
        }
        
        
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/Prestamos/Index");
    }
}
