@page "/Prestamos/Cobro/Index"
@using LiamellCruz_Ap1_P1.Models
@using LiamellCruz_Ap1_P1.Service
@inject CobroService cobroService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


@*HTML*@

<PageTitle>Index</PageTitle>
<div class="container">
    <div class="card-shadow-lg">
        @*Header*@
        <div class="card-header text-center">
            <h3><strong>Cobros</strong></h3>
        </div>
        @*Body*@
        <div class="card-body">
            @*Labels*@
            <div class="row">
                @*Filtrar por*@
                <div class="col-3">
                    <label class="form-label"><strong>Filtrar Por</strong></label>
                </div>
                @*ValorFiltro*@
                <div class="col-4">
                    <label class="form-label"><strong>B&uacute;squeda</strong></label>
                </div>
            </div>
            @*Inputs y Botones*@
            <div class="row">
                @*Filtro*@
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opci&oacute;n</option>
                        <option value="CobroId">CobroId</option>
                        <option value="Fecha">Fecha</option>
                        <option value="Deudor">Deudor</option>
                        <option value="Monto">Monto</option>
                    </InputSelect>
                </div>
                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                    </div>
                </div>
                @*Restablecer*@
                <div class="col-auto">
                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-clockwise" @onclick="Restablecer"></button>
                </div>
                @*Crear*@
                <div class="col text-end">
                    <button type="button" class="btn btn-primary bi bi-plus-circle" @onclick="Crear"></button>
                </div>
            </div>
            <table class="table table-bordered text-center mt-4">
                <thead>
                    <tr>
                        <th>CobroId</th>
                        <th>Fecha</th>
                        <th>Deudor</th>
                        <th>Monto</th>
                        <th>Observar</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cobro in ListaCobros)
                    {
                        <tr>
                            <td>@cobro.CobroId</td>
                            <td>@cobro.Fecha</td>
                            <td>@cobro.Deudor?.Nombres</td>
                            <td>@cobro.Monto</td>
                            @*Observar*@
                            <td>
                                <button type="button" class="btn btn-outline-primary bi bi-eye"
                                        @onclick="()=> Observar(cobro.CobroId)"></button>
                            </td>
                            @*Editar*@
                            <td>
                                <button type="button" class="btn btn-outline-warning bi bi-pencil"
                                        @onclick="()=> Editar(cobro.CobroId)"></button>
                            </td>
                            @*Eliminar*@
                            <td>
                                <button type="button" class="btn btn-outline-danger bi bi-trash3"
                                        @onclick="()=> Eliminar(cobro.CobroId)"></button>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

    </div>
</div>





@code {

    public List<Cobros> ListaCobros { get; set; } = new List<Cobros>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaCobros = await cobroService.Listar(c => c.CobroId > 0);
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "")
        {
            if (Filtro == "Deudor")
            {
                ListaCobros = await cobroService.Listar(p => p.Deudor.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
            }
        }
        else
            ListaCobros = await cobroService.Listar(p => p.CobroId > 0);
    }
    private async Task Restablecer()
    {
        ListaCobros = await cobroService.Listar(e => e.CobroId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }

    public void Crear()
    {
        navigationManager.NavigateTo("/Prestamos/Cobro/Create");
    }

    public void Observar(int id)
    {
        navigationManager.NavigateTo($"/Prestamos/Cobro/Details/{id}");
    }

    public void Editar(int id)
    {
        navigationManager.NavigateTo($"/Prestamos/Cobro/Edit/{id}");
    }

    public void Eliminar(int id)
    {
        navigationManager.NavigateTo($"/Prestamos/Cobro/Delete/{id}");
    }



}
